{"ast":null,"code":"var _jsxFileName = \"/home/kailayapathys/Downloads/oracleIntr/FE/src/inputForm.js\";\nimport React from 'react';\nimport OutputView from './outputView';\n\nclass InputForm extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markers: 0,\n      plies: 0,\n      tolerance: 0,\n      sizes: {\n        XS: 0,\n        S: 0,\n        M: 0,\n        L: 0,\n        XL: 0,\n        XXL: 0\n      },\n      isWorking: false,\n      fetchError: null,\n      calculatedData: null\n    };\n    this.onGarmentsType = this.onGarmentsType.bind(this);\n    this.onPilesType = this.onPilesType.bind(this);\n    this.onToleranceType = this.onToleranceType.bind(this);\n    this.onSizesType = this.onSizesType.bind(this);\n    this.submitData = this.submitData.bind(this);\n    this.onBackFromOutput = this.onBackFromOutput.bind(this);\n  }\n\n  onGarmentsType(e) {\n    this.setState({\n      markers: parseInt(e.target.value, 0)\n    });\n  }\n\n  onPilesType(e) {\n    this.setState({\n      plies: parseInt(e.target.value, 0)\n    });\n  }\n\n  onToleranceType(e) {\n    this.setState({\n      tolerance: parseFloat(e.target.value)\n    });\n  }\n\n  onSizesType(e) {\n    const {\n      size\n    } = e.target.dataset;\n    console.log('size: ', size);\n    this.setState({\n      sizes: { ...this.state.sizes,\n        [size]: parseInt(e.target.value, 0)\n      }\n    });\n  }\n\n  onBackFromOutput() {\n    this.setState({\n      markers: 0,\n      plies: 0,\n      tolerance: 0,\n      sizes: {\n        XS: 0,\n        S: 0,\n        M: 0,\n        L: 0,\n        XL: 0,\n        XXL: 0\n      },\n      calculatedData: null\n    });\n  }\n\n  async submitData(e) {\n    e.preventDefault();\n    this.setState({\n      isWorking: true\n    });\n    fetch('http://0.0.0.0:9090/tshirt-calculation', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state)\n    }).then(response => response.json()).then(responseJson => {\n      // console.log('Res', responseJson);\n      this.setState({\n        calculatedData: responseJson,\n        isWorking: false\n      });\n    }).catch(error => {\n      this.setState({\n        fetchError: 'Unable to complete the calculation.'\n      });\n    });\n  }\n\n  render() {\n    const {\n      isWorking,\n      fetchError,\n      calculatedData\n    } = this.state;\n\n    if (isWorking) {\n      return React.createElement(\"div\", {\n        className: \"container-contact100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap-contact100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"contact100-form-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, fetchError || `Calculating...`), React.createElement(\"div\", {\n        className: \"container-contact100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => {\n          this.setState({\n            isWorking: false,\n            fetchError: null\n          });\n        },\n        className: \"contact100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Back to Calculation Form\", React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-right m-l-7\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))))));\n    }\n\n    if (calculatedData) {\n      return React.createElement(OutputView, {\n        calculatedData: calculatedData,\n        onBackFromOutput: this.onBackFromOutput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container-contact100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrap-contact100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"contact100-form validate-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"contact100-form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Total Cost Calculation\"), React.createElement(\"div\", {\n      className: \"wrap-input100 validate-input bg1\",\n      \"data-validate\": \"Please Type available number of markers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label-input100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Number of Markers *\"), React.createElement(\"input\", {\n      className: \"input100\",\n      onChange: this.onGarmentsType,\n      type: \"number\",\n      name: \"name\",\n      placeholder: \"Enter available number of markers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wrap-input100 validate-input bg1\",\n      \"data-validate\": \"Please Type maximum number of plies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label-input100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Maximum number of Plies *\"), React.createElement(\"input\", {\n      className: \"input100\",\n      onChange: this.onPilesType,\n      type: \"number\",\n      name: \"name\",\n      placeholder: \"Enter maximum number of plies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wrap-input100 validate-input bg1\",\n      \"data-validate\": \"Please Type Quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label-input100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Tolerance *\"), React.createElement(\"input\", {\n      className: \"input100\",\n      onChange: this.onToleranceType,\n      type: \"number\",\n      name: \"name\",\n      placeholder: \"Enter Required Quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wrap-input100 bg1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"div\", {\n      className: \"rs1-custom-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label-input100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"XS\"), React.createElement(\"input\", {\n      className: \"input100\",\n      onChange: this.onSizesType,\n      \"data-size\": \"XS\",\n      type: \"number\",\n      name: \"email\",\n      placeholder: \"'XS' count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label-input100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"S\"), React.createElement(\"input\", {\n      className: \"input100\",\n      onChange: this.onSizesType,\n      \"data-size\": \"S\",\n      type: \"number\",\n      name: \"phone\",\n      placeholder: \"'S' count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label-input100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"M\"), React.createElement(\"input\", {\n      className: \"input100\",\n      onChange: this.onSizesType,\n      \"data-size\": \"M\",\n      type: \"number\",\n      name: \"phone\",\n      placeholder: \"'M' count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"rs1-custom-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label-input100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"L\"), React.createElement(\"input\", {\n      className: \"input100\",\n      onChange: this.onSizesType,\n      \"data-size\": \"L\",\n      type: \"number\",\n      name: \"email\",\n      placeholder: \"'L' count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label-input100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"XL\"), React.createElement(\"input\", {\n      className: \"input100\",\n      onChange: this.onSizesType,\n      \"data-size\": \"XL\",\n      type: \"number\",\n      name: \"phone\",\n      placeholder: \"'XL' count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label-input100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"XXL\"), React.createElement(\"input\", {\n      className: \"input100\",\n      onChange: this.onSizesType,\n      \"data-size\": \"XXL\",\n      type: \"number\",\n      name: \"phone\",\n      placeholder: \"'XXL' count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"container-contact100-form-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.submitData,\n      className: \"contact100-form-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Submit\", React.createElement(\"i\", {\n      className: \"fa fa-long-arrow-right m-l-7\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default React.memo(InputForm);","map":{"version":3,"sources":["/home/kailayapathys/Downloads/oracleIntr/FE/src/inputForm.js"],"names":["React","OutputView","InputForm","PureComponent","constructor","props","state","markers","plies","tolerance","sizes","XS","S","M","L","XL","XXL","isWorking","fetchError","calculatedData","onGarmentsType","bind","onPilesType","onToleranceType","onSizesType","submitData","onBackFromOutput","e","setState","parseInt","target","value","parseFloat","size","dataset","console","log","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","responseJson","catch","error","render","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport OutputView from './outputView';\n\nclass InputForm extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            markers: 0,\n            plies: 0,\n            tolerance: 0,\n            sizes: {\n                XS: 0,\n                S: 0,\n                M: 0,\n                L: 0,\n                XL: 0,\n                XXL: 0,\n            },\n            isWorking: false,\n            fetchError: null,\n            calculatedData: null,\n        }\n\n        this.onGarmentsType = this.onGarmentsType.bind(this);\n        this.onPilesType = this.onPilesType.bind(this);\n        this.onToleranceType = this.onToleranceType.bind(this);\n        this.onSizesType = this.onSizesType.bind(this);\n        this.submitData = this.submitData.bind(this);\n        this.onBackFromOutput =this.onBackFromOutput.bind(this);\n    }\n\n    onGarmentsType(e) {\n        this.setState({ markers: parseInt(e.target.value,0) })\n    }\n\n    onPilesType(e) {\n        this.setState({ plies: parseInt(e.target.value,0) })\n    }\n\n    onToleranceType(e) {\n        this.setState({ tolerance: parseFloat(e.target.value) })\n    }\n\n    onSizesType(e) {\n        const { size } = e.target.dataset;\n        console.log('size: ', size);\n        this.setState({\n            sizes: {\n                ...this.state.sizes,\n                [size]: parseInt(e.target.value, 0)\n            }\n        })\n    }\n\n    onBackFromOutput() {\n        this.setState({\n            markers: 0,\n            plies: 0,\n            tolerance: 0,\n            sizes: {\n                XS: 0,\n                S: 0,\n                M: 0,\n                L: 0,\n                XL: 0,\n                XXL: 0,\n            },\n            calculatedData: null\n        })\n    }\n\n    async submitData(e) {\n        e.preventDefault();\n        this.setState({ isWorking: true });\n        fetch('http://0.0.0.0:9090/tshirt-calculation', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(this.state)\n        }).then((response) => response.json())\n        .then((responseJson) => {\n            // console.log('Res', responseJson);\n            this.setState({ calculatedData: responseJson, isWorking: false });\n        })\n        .catch((error) => {\n            this.setState({ fetchError: 'Unable to complete the calculation.'})\n        });\n    }\n\n    render() {\n        const { isWorking, fetchError, calculatedData } = this.state;\n\n        if (isWorking) {\n            return (\n                <div className=\"container-contact100\">\n                    <div className=\"wrap-contact100\">\n                        <span className=\"contact100-form-title\">\n                            {fetchError || `Calculating...`}\n                    </span>\n                        <div className=\"container-contact100-form-btn\">\n                            <button onClick={() => { this.setState({ isWorking: false, fetchError: null }) }} className=\"contact100-form-btn\">\n                                <span>\n                                    Back to Calculation Form\n                                <i className=\"fa fa-long-arrow-right m-l-7\" aria-hidden=\"true\"></i>\n                                </span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        if (calculatedData) {\n            return (\n                <OutputView calculatedData={calculatedData} onBackFromOutput={this.onBackFromOutput} />\n            )\n        }\n\n        return (\n            <div className=\"container-contact100\">\n                <div className=\"wrap-contact100\">\n                    <form className=\"contact100-form validate-form\">\n                        <span className=\"contact100-form-title\">\n                            Total Cost Calculation\n            </span>\n\n                        <div className=\"wrap-input100 validate-input bg1\" data-validate=\"Please Type available number of markers\">\n                            <span className=\"label-input100\">Number of Markers *</span>\n                            <input className=\"input100\" onChange={this.onGarmentsType} type=\"number\" name=\"name\" placeholder=\"Enter available number of markers\" />\n                        </div>\n\n                        <div className=\"wrap-input100 validate-input bg1\" data-validate=\"Please Type maximum number of plies\">\n                            <span className=\"label-input100\">Maximum number of Plies *</span>\n                            <input className=\"input100\" onChange={this.onPilesType} type=\"number\" name=\"name\" placeholder=\"Enter maximum number of plies\" />\n                        </div>\n\n                        <div className=\"wrap-input100 validate-input bg1\" data-validate=\"Please Type Quantity\">\n                            <span className=\"label-input100\">Tolerance *</span>\n                            <input className=\"input100\" onChange={this.onToleranceType} type=\"number\" name=\"name\" placeholder=\"Enter Required Quantity\" />\n                        </div>\n\n                        <div className=\"wrap-input100 bg1\">\n                            <b>Size</b>\n\n                            <div className=\"rs1-custom-0\">\n                                <div className=\"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\">\n                                    <span className=\"label-input100\">XS</span>\n                                    <input className=\"input100\" onChange={this.onSizesType} data-size=\"XS\" type=\"number\" name=\"email\" placeholder=\"'XS' count\" />\n                                </div>\n                                <div className=\"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\">\n                                    <span className=\"label-input100\">S</span>\n                                    <input className=\"input100\" onChange={this.onSizesType} data-size=\"S\" type=\"number\" name=\"phone\" placeholder=\"'S' count\" />\n                                </div>\n                                <div className=\"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\">\n                                    <span className=\"label-input100\">M</span>\n                                    <input className=\"input100\" onChange={this.onSizesType} data-size=\"M\" type=\"number\" name=\"phone\" placeholder=\"'M' count\" />\n                                </div>\n                            </div>\n\n                            <div className=\"rs1-custom-0\">\n                                <div className=\"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\">\n                                    <span className=\"label-input100\">L</span>\n                                    <input className=\"input100\" onChange={this.onSizesType} data-size=\"L\" type=\"number\" name=\"email\" placeholder=\"'L' count\" />\n                                </div>\n                                <div className=\"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\">\n                                    <span className=\"label-input100\">XL</span>\n                                    <input className=\"input100\" onChange={this.onSizesType} data-size=\"XL\" type=\"number\" name=\"phone\" placeholder=\"'XL' count\" />\n                                </div>\n                                <div className=\"wrap-input100 bg1 rs1-wrap-input100 rs1-custom-1\">\n                                    <span className=\"label-input100\">XXL</span>\n                                    <input className=\"input100\" onChange={this.onSizesType} data-size=\"XXL\" type=\"number\" name=\"phone\" placeholder=\"'XXL' count\" />\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <div className=\"container-contact100-form-btn\">\n                            <button onClick={this.submitData} className=\"contact100-form-btn\">\n                                <span>\n                                    Submit\n                                    <i className=\"fa fa-long-arrow-right m-l-7\" aria-hidden=\"true\"></i>\n                                </span>\n                            </button>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default React.memo(InputForm);"]},"metadata":{},"sourceType":"module"}